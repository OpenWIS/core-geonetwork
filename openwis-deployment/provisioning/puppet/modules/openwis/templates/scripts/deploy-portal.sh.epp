#!/bin/bash

. $(dirname $(realpath $0))/setenv.sh

export USE_LOCAL_PORTAL_WAR=<%= $use_local_portal_war %>
export LOCAL_PORTAL_WAR=<%= $local_portal_war %>
export REMOTE_PORTAL_WAR=<%= $remote_portal_war %>

export WEBAPPS_FOLDER=/usr/share/tomcat/webapps

# Stop Tomcat & clear the logs folder
as_root service tomcat stop
as_root rm -f /usr/share/tomcat/logs/*

# get the portal WAR file (local or remote, as appropriate)
if [ "${USE_LOCAL_PORTAL_WAR}" == "true" ]
then
	echo 'Deploying locally built geonetwork.war'
	cp ${LOCAL_PORTAL_WAR} ${DOWNLOADS_DIR}/geonetwork.war
else
	echo 'Deploying geonetwork.war from remote repository'
	if [ ! -f ${DOWNLOADS_DIR}/geonetwork.war ]
	then
		wget ${REMOTE_PORTAL_WAR} -O ${DOWNLOADS_DIR}/geonetwork.war
	fi
fi

# remove the web app folder
test -d ${WEBAPPS_FOLDER}/geonetwork && as_root rm -rf ${WEBAPPS_FOLDER}/geonetwork

# deploy & configure the web app
as_root unzip -q ${DOWNLOADS_DIR}/geonetwork.war -d ${WEBAPPS_FOLDER}/geonetwork
as_root cp ${CONFIG_SRC_DIR}/portal/config-db/* ${WEBAPPS_FOLDER}/geonetwork/WEB-INF/config-db/
as_root cp ${CONFIG_SRC_DIR}/portal/config-node/* ${WEBAPPS_FOLDER}/geonetwork/WEB-INF/config-node/
as_root chown -R tomcat: ${WEBAPPS_FOLDER}/geonetwork

# (re)start Tomcat
as_root service tomcat start
