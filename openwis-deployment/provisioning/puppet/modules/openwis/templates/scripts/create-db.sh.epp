#!/bin/bash

. $(dirname $(realpath $0))/setenv.sh

# check if the touchfile exists & exit if appropriate
export TOUCHFILE=${TOUCHFILES_DIR}/db-provisioned
test -f ${TOUCHFILE} && exit

export POSTGRESQL_VERSION=<%= $postgresql_version %>
export POSTGIS_VERSION=<%= $postgis_version %>

# install the PostgreSQL admin pack
as_postgres psql -c 'CREATE EXTENSION adminpack;'

# install the PostGIS extensions
as_postgres psql -f /usr/pgsql-${POSTGRESQL_VERSION}/share/contrib/postgis-${POSTGIS_VERSION}/postgis.sql > /dev/null
as_postgres psql -f /usr/pgsql-${POSTGRESQL_VERSION}/share/contrib/postgis-${POSTGIS_VERSION}/postgis_comments.sql > /dev/null
as_postgres psql -f /usr/pgsql-${POSTGRESQL_VERSION}/share/contrib/postgis-${POSTGIS_VERSION}/spatial_ref_sys.sql > /dev/null
as_postgres psql -f /usr/pgsql-${POSTGRESQL_VERSION}/share/contrib/postgis-${POSTGIS_VERSION}/legacy.sql > /dev/null

# create the OpenWIS (Data Services) database & apply the PostGIS extensions
as_postgres createdb OpenWIS

as_postgres psql -d OpenWIS -c 'CREATE EXTENSION postgis;'
as_postgres psql -d OpenWIS -c 'CREATE EXTENSION postgis_topology;'
as_postgres psql -d OpenWIS -c 'CREATE EXTENSION ogr_fdw;'
as_postgres psql -d OpenWIS -c 'CREATE EXTENSION pgrouting;'

## create the openwis user role
as_postgres psql -f ${CONFIG_SRC_DIR}/database/openwis-roles.sql

# create the touchfile to ensure that this script is only run once
touch ${TOUCHFILE}
